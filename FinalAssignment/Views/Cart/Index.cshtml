@{
    ViewBag.Title = "Cart Page";
    var clayout = "";
    var admin = Session["admin"];

    //Try Catch is implmented to catch null values // this happens when user first registers, becuase value is left empty.
    try
    {
        //if logging in using the cookie we need this to take value from cookie instead of Database
        admin = Request.Cookies["AdminSession"].Value.ToString();
        //Uses session to pass isadmin from database to var to pick what layout to render.
        if (admin.Equals("true"))
        {
            clayout = "~/Views/Shared/_Layout.cshtml";
        }
        else
        {
            clayout = "~/Views/Shared/_Layout2.cshtml";
        }
        Layout = clayout;
    }
    catch (NullReferenceException ex)
    {
        clayout = "~/Views/Shared/_Layout2.cshtml";
        Layout = clayout;
    }

}

<head>

    <style>
        html {
            background: #bbc3c6;
            font: 62.5%/1.5em "Trebuchet Ms", helvetica;
        }

        * {
            box-sizing: border-box;
            -webkit-font-smoothing: antialiased;
            font-smoothing: antialiased;
        }

        @@font-face {
            font-family: 'Shopper';
            src: url('http://www.shopperfont.com/font/Shopper-Std.ttf');
        }

        .shopper {
            text-transform: lowercase;
            font: 2em 'Shopper', sans-serif;
            line-height: 0.5em;
            display: inline-block;
        }



        h1 {
            text-transform: uppercase;
            font-weight: bold;
            font-size: 2.5em;
        }

        p {
            font-size: 1.5em;
            color: #8a8a8a;
        }

        input {
            border: 0.3em solid #bbc3c6;
            padding: 0.5em 0.3em;
            font-size: 1.4em;
            color: #8a8a8a;
            text-align: center;
        }

        img {
            max-width: 9em;
            width: 100%;
            overflow: hidden;
            margin-right: 1em;
        }

        a {
            text-decoration: none;
        }

        .container {
            max-width: 75em;
            width: 95%;
            margin: 40px auto;
            overflow: hidden;
            position: relative;
            border-radius: 18px;
            background: #ecf0f1;
        }

        .heading {
            padding: 1em;
            position: relative;
            z-index: 1;
            color: #f7f7f7;
            background: black;
        }

        .cart {
            margin: 2.5em;
            overflow: hidden;
        }

            .cart.is-closed {
                height: 0;
                margin-top: -2.5em;
            }

        .table {
            background: #ffffff;
            border-radius: 0.6em;
            overflow: hidden;
            clear: both;
            margin-bottom: 1.8em;
        }


        .layout-inline > * {
            display: inline-block;
        }

        .align-center {
            text-align: center;
        }

        .th {
            background: black;
            color: #fff;
            text-transform: uppercase;
            font-weight: bold;
            font-size: 1.5em;
        }

        .tf {
            background: black;
            text-transform: uppercase;
            text-align: right;
            font-size: 1.2em;
        }

            .tf p {
                color: #fff;
                font-weight: bold;
            }

        .col {
            padding: 1em;
            width: 12%;
            color: white;
        }

        .col-pro {
            width: 44%;
        }

        .col-green {
            padding: 1em;
            width: 12%;
            color: green;
        }

        .col-red {
            padding: 1em;
            width: 12%;
            color: red;
        }

        .col-pro > * {
            vertical-align: middle;
        }

        .col-qty {
            text-align: center;
            width: 17%;
        }

        .col-numeric p {
            font: bold 1.8em helvetica;
        }

        .col-total p {
            color: #12c8b1;
        }

        .tf .col {
            width: 20%;
        }

        .row > div {
            vertical-align: middle;
        }

        .row-bg2 {
            background: #f7f7f7;
        }

        .visibility-cart {
            position: absolute;
            color: #fff;
            top: 0.5em;
            right: 0.5em;
            font: bold 2em arial;
            border: 0.16em solid #fff;
            border-radius: 2.5em;
            padding: 0 0.22em 0 0.25em;
        }

        .col-qty > * {
            vertical-align: middle;
        }

        .col-qty > input {
            max-width: 2.6em;
        }


        a.qty {
            width: 1em;
            line-height: 1em;
            border-radius: 2em;
            font-size: 2.5em;
            font-weight: bold;
            text-align: center;
            background: #43ace3;
            color: #fff;
        }

            a.qty:hover {
                background: #3b9ac6;
            }

        .btn {
            padding: 10px 30px;
            border-radius: 0.3em;
            font-size: 1.4em;
            font-weight: bold;
            background: #43ace3;
            color: #fff;
            box-shadow: 0 3px 0 rgba(59,154,198, 1)
        }

            .btn:hover {
                box-shadow: 0 3px 0 rgba(59,154,198, 0)
            }


        .btn-update {
            float: left;
            background-color: red;
            margin: 0 0 1.5em 0;
        }

        .btn-sub {
            float: right;
            background-color: green;
            margin: 0 0 1.5em 0;
        }

        .transition {
            transition: all 0.3s ease-in-out;
        }

        @@media screen and ( max-width: 755px) {
            .container {
                width: 98%;
            }

            .col-pro {
                width: 35%;
            }

            .col-qty {
                width: 22%;
            }

            img {
                max-width: 100%;
                margin-bottom: 1em;
            }
        }

        @@media screen and ( max-width: 591px) {
        }
    </style>
    <script>
        document.querySelector('.someclass').innerHTML = 'welcome world';
    </script>


</head>

@{
    if (@Session["CartItemPrice"] != null)
    {
        var amount = float.Parse(@Session["CartItemPrice"].ToString(), System.Globalization.CultureInfo.InvariantCulture);
        var tax = 0.13;
        var total = Math.Round((amount * 0.13) + amount, 2);
        var taxamount = Math.Round(amount * 0.13, 2);
        Session["Tax"] = taxamount.ToString();
        Session["Total"] = total.ToString();
    }
    else
    {
        Session["CartItemName"] = "Empty";
        Session["CartItemPrice"] = "0.00";
        Session["Tax"] = "0.00";
        Session["Total"] = "0.00";

    }
}

@if (TempData["Empty"] != null)
{
    <div class="alert-danger">
        @TempData["Empty"]
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert-success">
        @TempData["Success"]
    </div>
}


<div class="container">
    <div class="heading">
        <h1>
            <span class="shopper">BETA</span> Shopping Cart
        </h1>

    </div>

    <div class="cart transition is-open">



        <div class="table">

            <div class="layout-inline row th">
                <div class="col col-pro">Product</div>
                <div class="col col-price align-center ">
                    Price
                </div>
                <div class="col col-qty align-center">QTY</div>
                <div class="col">TAX</div>
                <div class="col">Total</div>
            </div>

            <div class="layout-inline row">

                <div class="col col-pro layout-inline">
                    <!--<img src="http://static.ddmcdn.com/gif/10-kitten-cuteness-1.jpg" alt="kitten" />-->
                    <p> @Session["CartItemName"].ToString()</p>
                </div>

                <div class="col col-price col-numeric align-center ">
                    <p>$@Session["CartItemPrice"].ToString()</p>
                </div>

                <div class="col col-qty layout-inline">
                    <p>1</p>
                </div>

                <div class="col col-vat col-numeric">
                    <p>@Session["Tax"].ToString()</p>
                </div>
                <div class="col col-total col-numeric">
                    <p>$@Session["Total"].ToString()</p>
                </div>
            </div>



            <div class="tf">
                <div class="row layout-inline">
                    <div class="col">
                        <p>Tax</p>
                    </div>
                    <div class="col-red">$@Session["Tax"].ToString()</div>
                </div>
                <div class="row layout-inline">
                    <div class="col">
                        <p>Total</p>
                    </div>
                    <div class="col-green">$@Session["Total"].ToString()</div>
                </div>
            </div>
        </div>

        <a href="@Url.Action("CreateOrder", "Orders")" class="btn btn-sub">Submit Order</a>
        <a href="@Url.Action("ClearCart","Products")" class="btn btn-update">Clear Cart</a>
    </div>

