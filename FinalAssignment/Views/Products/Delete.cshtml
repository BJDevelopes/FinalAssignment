@model FinalAssignment.Models.Products
@using FinalAssignment.Models;
@{
    ViewBag.Title = "Delete";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var clayout = "";
    var admin = Session["admin"];

    //Try Catch is implmented to catch null values // this happens when user first registers, becuase value is left empty.
    try
    {
        //if logging in using the cookie we need this to take value from cookie instead of Database
        admin = Request.Cookies["AdminSession"].Value.ToString();
        //Uses session to pass isadmin from database to var to pick what layout to render.
        if (admin.Equals("true"))
        {
            clayout = "~/Views/Shared/_AdminLayout.cshtml";
        }
        else
        {
            clayout = "~/Views/Shared/_AdminLayout.cshtml";
            Response.Redirect("~/Home/Index");
        }
        Layout = clayout;
    }
    catch (NullReferenceException ex)
    {
        clayout = "~/Views/Shared/_AdminLayout.cshtml";
        Layout = clayout;
    }
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Products</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.quantity)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.quantity)
        </dd>

    </dl>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Back to List", "Index")
        </div>
    }
</div>
