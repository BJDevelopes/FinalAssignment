@model IEnumerable<FinalAssignment.Models.Products>
@using FinalAssignment.Models;
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var clayout = "";
    var admin = Session["admin"];

    //Try Catch is implmented to catch null values // this happens when user first registers, becuase value is left empty.
    try
    {
        //if logging in using the cookie we need this to take value from cookie instead of Database
        admin = Request.Cookies["AdminSession"].Value.ToString();
        //Uses session to pass isadmin from database to var to pick what layout to render.
        if (admin.Equals("true"))
        {
            clayout = "~/Views/Shared/_AdminLayout.cshtml";
        }
        else
        {
            clayout = "~/Views/Shared/_AdminLayout.cshtml";
            Response.Redirect("~/Home/Index");
        }
        Layout = clayout;
    }
    catch (NullReferenceException ex)
    {
        clayout = "~/Views/Shared/_AdminLayout.cshtml";
        Layout = clayout;
    }
}

<img src="~/Content/manageproductsbanner.png" />
<div class="col-md-9" style="background-color: white; border-radius: 25px; margin-left: 20px;">
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.instock)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.pictureURL)
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.instock)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.pictureURL)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.id })
                </td>
            </tr>
        }

    </table>
    <p>
        <button type="button" class="btn btn-success">@Html.ActionLink("Create New", "Create", null, new { style = "color: white;" })</button>
    </p>
</div>