@using FinalAssignment.Models;
@{
    ViewBag.Title = "Users Management";
    Layout = "../Shared/_AdminLayout.cshtml";
    var clayout = "";
    var admin = Session["admin"];

    //Try Catch is implmented to catch null values // this happens when user first registers, becuase value is left empty.
    try
    {
        //Uses session to pass isadmin from database to var to pick what layout to render.
        if (admin.Equals("true"))
        {
            clayout = "~/Views/Shared/_AdminLayout.cshtml";
        }
        else
        {
            clayout = "~/Views/Shared/_AdminLayout.cshtml";
            Response.Redirect("~/Home/Index");
        }
        Layout = clayout;
    }
    catch (NullReferenceException ex)
    {
        clayout = "~/Views/Shared/_AdminLayout.cshtml";
        Layout = clayout;
    }
}

@model IEnumerable<FinalAssignment.Models.Users>


<!--<h2>@ViewBag.Title.</h2> -->

<img src="~/Content/manageusersbanner.png" />

<h2>Users</h2>


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.firstname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.lastname)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.isadmin)
        </th>
        <th></th>
    </tr>

    @foreach (var user in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => user.firstname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => user.lastname)
            </td>
            <td>
                @Html.DisplayFor(modelItem => user.isadmin)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = user.Id }) |
                @Html.ActionLink("Details", "Details", new { id = user.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = user.Id })
            </td>
        </tr>
    }

</table>

