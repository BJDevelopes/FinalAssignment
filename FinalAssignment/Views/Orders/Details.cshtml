@model FinalAssignment.Models.Orders
@using FinalAssignment.Models;
@{
    @{
        ViewBag.Title = "Details";
        Layout = "~/Views/Shared/_AdminLayout.cshtml";
        var clayout = "";
        var admin = Session["admin"];

        //Try Catch is implmented to catch null values // this happens when user first registers, becuase value is left empty.
        try
        {
            //if logging in using the cookie we need this to take value from cookie instead of Database
            admin = Request.Cookies["AdminSession"].Value.ToString();
            //Uses session to pass isadmin from database to var to pick what layout to render.
            if (admin.Equals("true"))
            {
                clayout = "~/Views/Shared/_AdminLayout.cshtml";
            }
            else
            {
                clayout = "~/Views/Shared/_AdminLayout.cshtml";
                Response.Redirect("~/Home/Index");
            }
            Layout = clayout;
        }
        catch (NullReferenceException ex)
        {
            clayout = "~/Views/Shared/_AdminLayout.cshtml";
            Layout = clayout;
        }
    }

    <h2>Details</h2>

    <div>
        <h4>Orders</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.userID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.userID)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.productID)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.productID)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.total)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.total)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.id }) |
        @Html.ActionLink("Back to List", "Index")
    </p>
